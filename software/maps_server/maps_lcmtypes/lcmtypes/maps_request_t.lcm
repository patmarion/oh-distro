package maps;

struct request_t
{
  // timestamp of this message
  int64_t utime;

  // id of map
  int64_t map_id;

  // id assigned to requested view
  int64_t view_id;

  // whether the view should be active
  boolean active;

  // whether the time range is absolute or relative
  int8_t time_mode;

  // whether the clip planes are absolute or relative
  boolean relative_location;

  // type of data requested
  int8_t type;

  // resolution or subsampling
  float resolution;

  // how frequently to send, in Hz (0 = one time only)
  float frequency;

  // tolerance for quantization
  float quantization_max;

  // which channel to publish the response on
  string channel;

  // time bounds (set to -1 for unbounded)
  int64_t time_min;
  int64_t time_max;

  // clip planes
  int8_t num_clip_planes;
  float clip_planes[num_clip_planes][4];

  // transform applied (reference to view)
  float transform[4][4];

  // sizes (for image types)
  int16_t width;
  int16_t height;

  // accumulation method (for image types)
  int8_t accum_type;

  // enum for request types
  const int8_t NONE = 0;
  const int8_t POINT_CLOUD = 1;
  const int8_t OCTREE = 2;
  const int8_t DEPTH_IMAGE = 3;
  const int8_t SCAN_BUNDLE = 4;

  // enum for time types
  const int8_t ABSOLUTE = 0;
  const int8_t RELATIVE = 1;
  const int8_t ROLL_ANGLE_ABSOLUTE = 2;
  const int8_t ROLL_ANGLE_RELATIVE = 3;

  // enum for accumulation types
  const int8_t CLOSEST = 0;
  const int8_t FURTHEST = 1;
  const int8_t MEAN = 2;
  const int8_t MEDIAN = 3;
  const int8_t CLOSEST_PERCENTILE = 4;
  const int8_t ROBUST_BLEND = 5;
}
