coordinate_frames {
  root_frame = "local";
  
  body {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_BODY"; 
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }
  utorso {
    relative_to = "body";
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  # 2016-11-02: wxm extracted from URDF
  imu {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    update_channel = "BODY_TO_IMU";
    initial_transform{
      translation=[0.19, 0, 0.149];
      rpy = [0.0, -90.00021045914971, -179.9995790817006];
    }
  }

  # TODO: transform needs to be updated
  SICK_SCAN {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    update_channel = "BODY_TO_SICK_SCAN";
    initial_transform{
      translation=[  -0.06 , 0.0 , 0.32 ];
      rpy = [0.0 , -90.0 , 180.0 ];
    }
  }

  # Taken from URDF via Director
  # TODO: publish BODY_TO_BUMBLEBEE2 if PTU is moving
  bumblebee2 {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    update_channel = "BODY_TO_BUMBLEBEE2";
    initial_transform {
      translation = [0.3379286183918802, -0.008957183436844858, 0.7027715713320093];
      rpy = [-0.09125221318859174, 0.09125244465427212, -0.09110699551083097];
    }
  }

  # TODO: needs to be calibrated/measured/optimised
  KINECT_RGB {
    relative_to = "bumblebee2";
    history = 2000;
    max_frequency = 10;
    update_channel = "BUMBLEBEE2_TO_XTION";
    initial_transform{
      translation=[0.0, 0.05, 0.0];
      rpy = [90.0, 0.0, 90.0];
    }
  }
}

planar_lidars {
  SICK_SCAN {
    viewer_color = [ 0.0, 1.0, 0.0 ]; # red
    max_range = 80.0;
    min_range = 0.1;
    frequency = 25;
    laser_type = "SICK";
    coord_frame = "SICK_SCAN";
    lcm_channel = "SICK_SCAN";
    surround_region = [0, 1000000];
    up_region = [-1,-1];
    down_region = [-1, -1];
    max_range_free_dist = 80.0;
  }
}

cameras {
  KINECT_RGB {
    lcm_channel = "KINECT_RGB";
    coord_frame = "KINECT_RGB";
    intrinsic_cal {
      width = 640;
      height= 480;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];
      pinhole = [ 528.01442863461716, 528.01442863461716, 0, 321.06398107, 242.97676897 ]; # fx fy skew cx cy
    }
  }
}
