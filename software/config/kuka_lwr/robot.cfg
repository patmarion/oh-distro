coordinate_frames {
  root_frame = "local";

  # this is the pelvis link, its a legacy that its referred to as body
  body {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_BODY";
    #update_channel = "HEAD_TO_BODY";  
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }   


  lwr_arm_7_link {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    update_channel = "BODY_TO_LWR_ARM_7_LINK";
    initial_transform{
      translation=[  0 , 0.0 , 0.0 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }


  KINECT_RGB {
    relative_to = "lwr_arm_7_link";
    history = 2000;
    max_frequency = 100;
    update_channel = "LWR_ARM_7_LINK_TO_KINECT_RGB";
    initial_transform{
      # wolfgang manually calibrated 2015-07-24
      translation = [ 0.05530167,  -0.01,  0.01318083];
      quat = [ 0.70507905,  0.026078  ,  0.01779489,  0.70842559 ];
    }
  }  

  utorso {
    relative_to = "body";
    history = 2000;
    max_frequency = 5;
    update_channel = "BODY_TO_UTORSO";
    initial_transform{
      translation = [ 0, 0, 0 ];
      quat = [ 1, 0, 0, 0 ];
    }
  }

  ### Blocks needed to avoid a segfault
  head {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    #pose_update_channel= "POSE_HEAD";
    update_channel = "BODY_TO_HEAD";  
    initial_transform{
      translation=[  0 , 0.0 , 0.0 ];
      rpy = [0.0 , 0.0 , 0.0 ];
    }
  }

  CAMERA_LEFT {
    # this cannot change - its rigid
    relative_to = "head";
    history = 5000;
    update_channel = "HEAD_TO_LEFT_CAMERA_OPTICAL_FRAME";
    initial_transform{
      # location of left camera:
      # i dont think .....78242 is taken care of the URDF transforms...
      translation = [ 0.0, 0.0350465783941255, -0.002];
      rpy = [ -90.0, 0.0, -90.0];      
    }
  } 
  
  CAMERA_RIGHT {
    relative_to = "CAMERA_LEFT";
    history = 5000;
    # Fixed, read from CRL camera
    update_channel = "CAMERA_LEFT_TO_CAMERA_RIGHT"; 
    initial_transform{
      # antone: updated on 2014-03-28 for upgraded multisense unit 02
      translation = [ 0.0700931567882511, 0.0, 0.0];
      rpy = [ 0.0, 0.0, 0.0];
    }
  }

  CAMERACHEST_LEFT {
    # position estimated by eye, not accurate
    relative_to = "utorso";
    history = 5000;
    update_channel = "UTORSO_TO_CAMERACHEST_LEFT_OPTICAL_FRAME";  
    initial_transform{
      # calibrated to head camera by Matt A. 2013-12-03, no translation
      #translation = [0.216409, -0.121799, 0.406759];
      #rpy = [-85.465012, 0.840432, -13.015107];

      # calibrated to head camera by Matt A. 2015-02-20, full
      translation = [0.170000, 0.080000, 0.760000];
      rpy = [-89.373336, 3.150402, -13.567189];
      #translation = [0.160822, 0.095437, 0.763896];
      #rpy = [-89.331792, 3.183854, -13.964528];

      # mapped over from the URDF (oct 2013)
      #translation = [ 0.216409, 0.121799, 0.406759 ];
      #rpy = [ -90.0, 0.0, -15.0];
      # Original Manually done:
      #translation = [ 0.175, 0.09, 0.4 ];
      #rpy = [ -90.0, 0.0, -15.0];      
    }
  }

  CAMERACHEST_RIGHT {
    # position estimated by eye, not accurate
    relative_to = "utorso";
    history = 5000;
    update_channel = "UTORSO_TO_CAMERACHEST_RIGHT_OPTICAL_FRAME";  
    initial_transform{
      # calibrated to head camera by Matt A. 2013-12-03, no translation
      #translation = [0.216409, 0.121799, 0.406759];
      #rpy = [-88.084805, 0.425035, -164.778553];

      # calibrated to head camera by Matt A. 2015-02-20, full
      #translation = [0.170000, -0.080000, 0.760000];
      #rpy = [-91.402895, -2.449124, -165.054455];

      # calibrated after moving to center forward view by Matt A. 2015-06-06
      translation = [0.242724, -0.028629, 0.848560];
      rpy = [-88.178579, 1.115159, -87.415623];
      # mapped over from the URDF (oct 2013)
      #translation = [ 0.216409, -0.121799, 0.406759 ];
      #rpy = [ -90.0, 0.0, -165.0];
      # Original Manually done:    
      #translation = [ 0.175, -0.09, 0.4 ];
      #rpy = [ -90.0, 0.0, -165.0];
    }
  }


}


cameras {
  # Kinect on Arm:
  KINECT_RGB {
    lcm_channel = "KINECT_RGB";
    coord_frame = "KINECT_RGB";
    intrinsic_cal{
      width = 640;
      height= 480;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];
      pinhole = [ 528.01442863461716, 528.01442863461716, 0, 321.06398107, 242.97676897 ]; # fx fy skew cx cy
    }
  }

  ### needed to avoid segfault after leap-forward

  CAMERACHEST_LEFT {
    # SA Camera, fish eye calibrated by Matt A. on 2015-02-20
    lcm_channel = "CAMERACHEST_LEFT";
    coord_frame = "CAMERACHEST_LEFT";
    intrinsic_cal{
      width = 1024;
      height= 1280;
      distortion_model = "angular-poly";
      distortion_coeffs = [ 0.364455125224955, 0.0259400054464941, 0.227713041272306 ];
      pinhole = [ 293.791104447152, 293.791104447152, 0, 499.226811745678, 646.005454910593 ];
    }      
  }

  CAMERACHEST_RIGHT {
    # SA Camera, fish eye calibrated by Matt A. on 2015-02-20
    lcm_channel = "CAMERACHEST_RIGHT";
    coord_frame = "CAMERACHEST_RIGHT";
    intrinsic_cal{
      width = 1280;
      height= 1024;
      distortion_model = "angular-poly";
      distortion_coeffs = [ 0.382931453355394, -0.0353360363772571, 0.296184482367706 ];
      pinhole = [ 295.184347262234, 295.184347262234, 0, 633.343000558226, 496.108534843804 ];
    }      
  }

  # fx fy skew cx cy 
  CAMERA_LEFT {
    lcm_channel = "CAMERA_LEFT";
    coord_frame = "CAMERA_LEFT";
    intrinsic_cal{
      width = 1024;
      height= 1024;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];
      # for 44 unit
      pinhole = [ 580.5900268554688, 580.5900268554688, 0, 512, 512 ];
    }
  }
  
  CAMERA_RIGHT {
    lcm_channel = "CAMERA_RIGHT";
    coord_frame = "CAMERA_RIGHT";
    intrinsic_cal{
      width = 1024;
      height= 1024;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];
      # for 44 unit
      pinhole = [ 580.5900268554688, 580.5900268554688, 0, 512, 512 ];
    }
  }  
}
